// ============================================================================================= //
//                                       CUSTOM PROPERTIES                                       //
// ============================================================================================= //

@use "sass:meta";
@use "sass:map";
@use "sass:string";

// ------------------------------------------------------------------------- //
// FUNCTIONS
// ------------------------------------------------------------------------- //

@function create($name, $fallback: null) {
    @if string.slice($name, 1, 2) != "--" {
        $name: create-varname($name);
    }

    @return (
        varname: $name,
        fallback: $fallback
    );
}

@function create-varname($name) {
    @return --#{$name};
}

@function get-varname($custom-prop) {
    @return map.get($custom-prop, "varname");
}

@function get-fallback($custom-prop) {
    @return map.get($custom-prop, "fallback");
}

@function is-custom-prop($array) {
    @return meta.type-of($array) == "map" and map.has-key($array, "varname");
}

@function custom-prop($custom-prop) {
    $name: get-varname($custom-prop);
    $fallback: get-fallback($custom-prop);

    @if $fallback {
        @return var($name, $fallback);
    }

    @return var($name);
}

// ------------------------------------------------------------------------- //
// MIXINS
// ------------------------------------------------------------------------- //

@mixin create-custom-property($custom-prop) {
    $property: get-varname($custom-prop);
    $value: get-fallback($custom-prop);

    #{$property}: $value;
}
